name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'

jobs:
  # Builds and checks .apk and .aar
  assemble:
    name: Assemble and check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v2
    - uses: gradle/wrapper-validation-action@v1
    - uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Generate cache key
      run: ./checksum.sh checksum.txt

    - uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Assemble and checks
      run: ./gradlew spotlessCheck assemble apiCheck lintDebug --build-cache --no-daemon --stacktrace --scan

  # Runs unit tests
  unit-tests:
    name: Unit tests
    needs: assemble
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Generate cache key
        run: ./checksum.sh checksum.txt

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Unit Tests with coverage
        run: ./gradlew jacocoTestReport --build-cache --no-daemon --stacktrace

      - name: Zip test reports
        run: find . -type d -regex ".*/build/reports/tests/.*DebugUnitTest" -exec zip -r reports.zip {} +

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: unit-tests-reports
          path: reports.zip

      - name: Upload tests coverage
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: unit-tests-coverage
          path: library/build/jacoco

  # Runs instrumentation tests
  instrumentation-tests:
    name: Instrumentation tests
    needs: assemble
    runs-on: macos-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        api-level:
          - 15
          - 19
          - 21
          - 25
          - 29

    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Generate cache key
        run: ./checksum.sh checksum.txt

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Instrumentation Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86
          script: ./gradlew connectedCheck mergeAndroidReports --build-cache --no-daemon --stacktrace

      - name: Upload tests reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: 'android-tests-${{ matrix.api-level }}-reports'
          path: build/androidTest-results

      - name: Upload tests coverage
        if: ${{ matrix.api-level == 21 }}
        uses: actions/upload-artifact@v2
        with:
          name: 'android-tests-${{ matrix.api-level }}-coverage'
          path: library/build/reports/coverage

  # Runs screenshot tests
  screenshot-tests:
    name: Screenshot tests
    needs: assemble
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Generate cache key
        run: ./checksum.sh checksum.txt

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Screenshot Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 24
          arch: x86_64
          script: ./gradlew :library:executeScreenshotTests --build-cache --no-daemon --stacktrace

      - name: Upload tests reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: 'screenshot-tests-reports'
          path: library/build/reports/shot

  # Upload coverage 
  upload-coverage:
    name: Upload coverage
    needs: [unit-tests, instrumentation-tests]
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v2

      - name: Download unit tests coverage
        uses: actions/download-artifact@v2
        with:
          name: unit-tests-coverage

      - name: Download android tests coverage
        uses: actions/download-artifact@v2
        with:
          name: android-tests-21-coverage

      - uses: codecov/codecov-action@v1
        with:
          directory: .